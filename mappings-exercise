https://docs.base.org/base-camp/docs/mappings/mappings-exercise/

STRING:                 ["Thriller", "Back in Black", "The Bodyguard", "The Dark Side of the Moon", "Their Greatest Hits (1971-1975)", "Hotel California", "Come On Over", "Rumours", "Saturday Night Fever"]


// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

contract FavoriteRecords {
    // Define custom error
    error NotApproved(string albumName);

    // Mapping to store approved records
    mapping(string => bool) public approvedRecords;

    // Array to store names of approved records
    string[] public approvedRecordNames;

    // Mapping to store user favorites
    mapping(address => string[]) private userFavorites;

    // Constructor to initialize approved records
    constructor(string[] memory _approvedRecords) {
        for (uint256 i = 0; i < _approvedRecords.length; i++) {
            string memory albumName = _approvedRecords[i];
            approvedRecords[albumName] = true;
            approvedRecordNames.push(albumName);
        }
    }

    // Function to get names of approved records
    function getApprovedRecords() external view returns (string[] memory) {
        return approvedRecordNames;
    }

    // Function to add a record to user favorites
    function addRecord(string calldata _albumName) external {
        require(approvedRecords[_albumName], "NotApproved");
        userFavorites[msg.sender].push(_albumName);
    }

    // Function to get user favorites
    function getUserFavorites(address _address) external view returns (string[] memory) {
        return userFavorites[_address];
    }

    // Function to reset user favorites
    function resetUserFavorites() external {
        delete userFavorites[msg.sender];
    }
}
